apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:latest
          ports:
            - containerPort: 2181
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"

---

apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  type: LoadBalancer
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"

---

apiVersion: v1
kind: Service
metadata:
  name: ksqldb-server
spec:
  type: LoadBalancer
  selector:
    app: ksqldb-server
  ports:
    - protocol: TCP
      port: 8088
      targetPort: 8088

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksqldb-server
  template:
    metadata:
      labels:
        app: ksqldb-server
    spec:
      containers:
        - name: ksqldb-server
          image: confluentinc/ksqldb-server:0.29.0
          ports:
            - containerPort: 8088
          env:
            - name: KSQL_LISTENERS
              value: "http://0.0.0.0:8088"
            - name: KSQL_BOOTSTRAP_SERVERS
              value: "PLAINTEXT://kafka:9092"
            - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
              value: "true"
            - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
              value: "true"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-cli
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksqldb-cli
  template:
    metadata:
      labels:
        app: ksqldb-cli
    spec:
      containers:
        - name: ksqldb-cli
          image: confluentinc/ksqldb-cli:0.29.0
          command: ["/bin/sh"]
          args: ["-c", "sleep infinity"]
          tty: true

---

apiVersion: v1
kind: Service
metadata:
  name: tei2json-api
spec:
  selector:
    app: tei2json-api
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tei2json-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tei2json-api
  template:
    metadata:
      labels:
        app: tei2json-api
    spec:
      containers:
        - name: tei2json-api
          image: shenukacj/tei2json-api:0.0.12
          ports:
            - containerPort: 3001
          securityContext:           
            privileged: true
          # Add other configuration as needed

---

apiVersion: v1
kind: Service
metadata:
  name: tei-api
spec:
  selector:
    app: tei-api
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tei-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tei-api
  template:
    metadata:
      labels:
        app: tei-api
    spec:
      containers:
        - name: tei-api
          image: shenukacj/tei-api:0.0.9
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /api/v1/TEI/healthcheck
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: json-api
spec:
  selector:
    app: json-api
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 3002
      targetPort: 3002

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: json-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: json-api
  template:
    metadata:
      labels:
        app: json-api
    spec:
      containers:
        - name: json-api
          image: shenukacj/json-api:0.0.8
          ports:
            - containerPort: 3002
          livenessProbe:
            httpGet:
              path: /api/v1/json/healthcheck
              port: 3002
            initialDelaySeconds: 15
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: collections-api
spec:
  selector:
    app: collections-api
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 3003
      targetPort: 3003

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: collections-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: collections-api
  template:
    metadata:
      labels:
        app: collections-api
    spec:
      containers:
        - name: collections-api
          image: shenukacj/collections-api:0.0.11
          ports:
            - containerPort: 3003
          livenessProbe:
            httpGet:
              path: /api/v1/collections/healthcheck
              port: 3003
            initialDelaySeconds: 15
            periodSeconds: 10